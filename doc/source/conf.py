"""
..
    Copyright (c) 2014-2017, Magni developers.
    All rights reserved.
    See LICENSE.rst for further information.

Magni documentation build configuration file

The basics of this configuration file was created using sphinx-quickstart.

"""

import sys
import os

from sphinx.ext.autosummary import autolink_role

# Modify path to include the base dir for Magni itself.
sys.path.insert(0, os.path.abspath('../../'))


# -- Read The Docs setup -------------------------------------------------------
# Workarounds for having readthedocs build the documentation
# See also: https://read-the-docs.readthedocs.org/en/latest/faq.html

# Documentation type: Sphinx Html
# Use virtualenv
# Requirements file: readthedocs-requirements.txt
# Python interpreter: CPython 3.x

on_rtd = os.environ.get('READTHEDOCS', None) == 'True'
if on_rtd:

    html_style = 'classic.css'  # Use classic Sphinx Theme

    latex_documents = [None, None]  # Disable PDF generation (hack)
    epub_cover = (None, None)  # Disable epub generation (hack)


# -- General configuration -----------------------------------------------------

# Minimal Sphinx version needed to build the documentation.
needs_sphinx = '1.3'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.todo', 'sphinx.ext.mathjax',
              'sphinx.ext.viewcode', 'sphinx.ext.extlinks',
              'sphinx.ext.napoleon']

if tags.has('no_viewcode_ext'):
    extensions.remove('sphinx.ext.viewcode')

# Add any paths that contain templates here, relative to this directory.
# templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'Magni'
copyright = '2014-2017, Magni developers'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
from magni import __version__ as magni_version
# The short X.Y version.
version = magni_version[:3]
# The full version, including alpha/beta/rc tags.
release = magni_version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
default_role = 'autolink'

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
modindex_common_prefix = ['magni.']


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'classic'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'sidebarwidth': 300,
    'collapsiblesidebar': True,
    'bodyfont': 'Lucida Grande',
    'headfont': 'Lucida Grande',
    'footerbgcolor': 'white',
    'footertextcolor': '#555555',
    'relbarbgcolor': 'white',
    'relbartextcolor': '#666666',
    'relbarlinkcolor': '#444444',
    'sidebarbgcolor': '#eeeeee',
    'sidebarbtncolor': '#cccccc',
    'sidebartextcolor': '#444444',
    'sidebarlinkcolor': '#444444',
    'bgcolor': 'white',
    'textcolor': '#222222',
    'linkcolor': '#00608f',
    'visitedlinkcolor': '#30306f',
    'headtextcolor': '1a1a1a',
    'headbgcolor': 'white',
    'headlinkcolor': '#aaaaaa'
}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True
html_use_modindex = False

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'Magnidoc'


# -- Options for Autodoc -------------------------------------------------------
# See: http://sphinx-doc.org/ext/autodoc.html
autoclass_content = 'both'  # Document both class docstring and __init__ method
autodoc_member_order = 'bysource'  # Arrange members as in the source files
autodoc_default_flags = ['members', 'private-members', 'special-members',
                         'show-inheritance']

def skip_special_members(app, what, name, obj, skip, options):
    """Skip some special members in the documentation."""
    skip_modules = ['__module__', '__doc__', '__dict__', '__weakref__',
                    '__init__', '_params']

    if name in skip_modules:
        return True
    else:
        return False


# -- Options for Todo ----------------------------------------------------------
todo_include_todos = True

# -- Options for Extlinks ------------------------------------------------------
extlinks = {'doi': ('http://dx.doi.org/%s', 'doi:')}


# -- Options for Numpydoc ------------------------------------------------------
# Don't use Numpydocs ability to show all members of a class in the Methods and
# Attributes sections automatically
numpydoc_show_class_members = False


# -- Options for Napoleon ------------------------------------------------------
napoleon_google_docstring = False
napoleon_numpy_docstring = True
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = False
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = False
napoleon_use_rtype = False


# -- Setup function ------------------------------------------------------------
def setup(app):
    # Disconnect sphinxcontrib.napoleon listeners
    app.disconnect(
        list(app.__dict__['_listeners']['autodoc-skip-member'].keys())[0])

    # Our modifications
    app.connect('autodoc-skip-member', skip_special_members)
    app.add_role('autolink', autolink_role)
